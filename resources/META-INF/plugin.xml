<idea-plugin>
    <id>com.github.wangji92.arthas.plugin</id>
    <name>arthas idea</name>
    <version>2.8</version>
    <vendor email="983433479@qq.com" url="https://github.com/WangJi92/arthas-idea-plugin">汪小哥</vendor>

    <description><![CDATA[
      <tag> Arthas Idea Help Tools,Help generated Arthas Common Command </tag>
      <h4>Arthas helps developers in trouble-shooting issues in production environment for Java based applications without modifying code or restarting servers.</h4>
      <h3>English:</h3>
      <ul>
      <li>Based on the  Arthas command generation plugin developed by IntelliJ IDEA, it supports <a href="https://alibaba.github.io/arthas/"> Alibaba Arthas </a> official commonly used commands.</li>
      <li>The official commands are too complicated. In order to simplify the difficulty of users, this plugin provides support for some common commands.</li>
      <li>The plugin supports  Alibaba Arthas commands such as watch、trace、ognl static、ognl bean method、field、monitor、stack 、tt etc.</li>
      <li>watch: Display the input/output parameter, return object, and thrown exception of specified method invocation</li>
      <li>trace: Trace the execution time of specified method invocation.</li>
      <li>ognl:Execute ognl expression.</li>
      <li>monitor:Monitor method execution statistics, e.g. total/success/failure count, average rt, fail rate, etc.</li>
      <li>stack:Display the stack trace for the specified class and method</li>
      <li>tt:Time Tunnel</li>


      </ul>
      <h3>中文：</h3>
      <ul>
      <li>基于IntelliJ IDEA开发的Alibaba Arthas 命令生成插件，支持<a href="https://alibaba.github.io/arthas/">Alibaba Arthas</a> 官方常用的命令。</li>
      <li>官方的命令太复杂，此插件为了简化使用者的难度，提供了一些常用命令的支持</li>
      <li>该插件支持Alibaba Arthas 常用命令,比如 watch、trace、ognl static、ognl bean method、field、monitor、stack 、tt等命令</li>
      <li>支持设置static field、static final</>
      <li>watch:能方便的观察到指定方法的调用情况,返回值、抛出异常、入参(特殊值、异常没有捕获排查)<li/>
      <li>trace:方法内部调用路径，并输出方法路径上的每个节点上耗时(性能问题，调用链问题)<li/>
      <li>ognl:执行表达式(方便获取静态变量，方法，获取spring context 为所欲为)</li>
      <li>monitor:方法执行监控(性能问题排查，一段时间内的性能指标)</li>
      <li>stack:获取方法从哪里执行的调用栈(用途：源码学习调用堆栈，了解调用流程)</li>
      <li>tt:方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调用进行观测(可以重新触发，周期触发，唯一缺点对于ThreadLocal 信息丢失[隐含参数]、引用对象数据变更无效)</li>
    ]]></description>

    <change-notes><![CDATA[
      <p>2.0-RELEASE</p>
      <ul>
        <li>1.supports Arthas commands such as watch, trace, ognl static, ognl bean method, etc.</li>
      </ul>
      <ul>
        <li>1.支持Arthas 常用命令,比如 watch、trace、ognl static、ognl bean method</li>
      </ul>
       <p>2.1-RELEASE</p>
      <ul>
        <li>1.supports Arthas commands Trace -E,The trace command will only trace the subcalls in the method to the trace, and will not trace down multiple layers. Because traces are expensive, multi-layer traces can lead to a lot of classes and methods that ultimately have to be traced..</li>
      </ul>
      <ul>
        <li>1.trace命令只会trace匹配到的函数里的子调用，并不会向下trace多层。因为trace是代价比较贵的，多层trace可能会导致最终要trace的类和函数非常多。因此Arthas 官方支持 trace -E 特殊获取多个，该插件支持一下trace -E</li>
      </ul>
      <p>2.2-RELEASE</p>
      <ul>
        <li>1.support ognl invoke spring bean field</li>
        <li>2.support cache ognl -c hash value</li>
      </ul>
      <ul>
        <li>1.支持ognl通过获取spring context 调用field</li>
        <li>2.支持缓存ognl -c 参数 classloader的hash值，方便下次使用直接获取信息</li>
      </ul>
       <p>2.3-RELEASE</p>
      <ul>
        <li>1.ognl invoke static field bug fix</li>
        <li>2.support Monitor,Monitor method execution statistics, e.g. total/success/failure count, average rt, fail rate, etc.</li>
        <li>3.support Stack,Display the stack trace for the specified class and method</li>
      </ul>
      <ul>
        <li>1.ognl调用static field 多一个空格bug</li>
        <li>2.支持Monitor,主要用途一段时间的执行的性能监控</li>
        <li>3.支持Stack,主要用途方法从哪里开始被调用(很多时候我们都知道一个方法被执行，但这个方法被执行的路径非常多，或者你根本就不知道这个方法是从那里被执行)</li>
      </ul>
       <p>2.4-RELEASE</p>
      <ul>
        <li>1.support time tunnel tt command</li>
      </ul>
      <ul>
        <li>1.支持时光隧道 tt 命令，支持常用的tt命令</li>
      </ul>
      </ul>
       <p>2.5-RELEASE</p>
      <ul>
        <li>1.support set static field command</li>
      </ul>
      <ul>
        <li>1.支持通过ognl 设置静态变量的值</li>
      </ul>
      <p>2.6-RELEASE</p>
      <ul>
        <li>1.support get selected spring property command</li>
        <li>2.support get all spring property command</li>
      </ul>
      <ul>
        <li>1.支持通过获取选中的text在spring中环境变量的值</li>
        <li>2.支持获取所有在spring中环境变量的值</li>
      </ul>
      <p>2.7-RELEASE</p>
      <ul>
        <li>1.support set static final field command <a href="https://github.com/alibaba/arthas/issues/641">issue</a></li>
      </ul>
      <ul>
        <li>1.支持设置static final的值 <a href="https://github.com/alibaba/arthas/issues/641">issue</a></li>
      </ul>
       <p>2.8-RELEASE</p>
      <ul>
        <li>1.support  Decompile class command jad --source-only java.lang.String</li>
      </ul>
      <ul>
        <li>1.支持反编译命令 jad --source-only java.lang.String toString 支持方法、和整个类</li>
      </ul>
      <p>More <a href="https://github.com/WangJi92/arthas-idea-plugin">Help Info</a>.</p>
    ]]></change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="162"/>


    <extensions defaultExtensionNs="com.intellij">
        <applicationConfigurable dynamic="false" instance="com.github.wangji92.arthas.plugin.ui.SettingDialog"/>
    </extensions>

    <depends>com.intellij.modules.platform</depends>

    <!--    Plugin uses classes of Java plugin, for example-->
    <!--    'JvmAnnotatedElement' is used at 'JvmModifiersOwner'-->
    <!--    'JvmAnnotatedElement' is used at 'JvmTypeDeclaration'-->
    <!--    'JvmClass' is used at 'PsiClass'-->
    <!--    but the plugin does not declare explicit dependency on the Java plugin, via <depends>com.intellij.modules.java</depends>.-->
    <!--    Java functionality was extracted from the IntelliJ Platform to a separate plugin in IDEA 2019.2.-->
    <!--    For more info refer to https://blog.jetbrains.com/platform/2019/06/java-functionality-extracted-as-a-plugin-->
    <depends>com.intellij.modules.java</depends>.

    <actions>
        <!-- Add your actions here -->

        <action id="ArthasSc" class="com.github.wangji92.arthas.plugin.action.arthas.ArthasScCommandAction" text=" Search Classes Loaded By JVM Sc"
                description="Arthas get classloader">
        </action>
        <action id="ArthasWatch" class="com.github.wangji92.arthas.plugin.action.arthas.ArthasWatchCommandAction"
                text="Watch"
                description=" Arthas watch">
        </action>
        <action id="ArthasTrace" class="com.github.wangji92.arthas.plugin.action.arthas.ArthasTraceCommandAction"
                text="Trace"
                description="Arthas trace">
        </action>
        <action id="ArthasStatic" class="com.github.wangji92.arthas.plugin.action.arthas.ArthasOgnlStaticCommandAction"
                text="Invoke Static Method Field"
                description="Arthas ognl static">
        </action>

        <action id="ArthasSpecial" class="com.github.wangji92.arthas.plugin.action.arthas.ArthasSpecialCommandAction"
                text="Arthas Special Use Link"
                description="Arthas special use link">

        </action>

        <action id="ArthasInvokeBeanMethod"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasOgnlSpringContextInvokeMethodAction"
                text="Invoke Spring Bean Method Field"
                description="Ognl invoke bean method、field">

        </action>

        <action id="ArthasInstallCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasInstallCommandAction"
                text="Install"
                description="Arthas install shell">

        </action>

        <action id="ArthasHelpCommand" class="com.github.wangji92.arthas.plugin.action.arthas.HelpAction"
                text="Arthas Idea Help"
                description="Arthas idea help">
        </action>
        <action id="ArthasTraceMultipleCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasTraceMultipleClassMethodCommandAction"
                text="Trace Multiple Class Method Trace -E"
                description="Arthas trace multiple class method">

        </action>
        <action id="ArthasMonitorCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasMonitorCommandAction"
                text="Monitor"
                description="Monitor method execution statistics, e.g. total/success/failure count, average rt, fail rate, etc.">

        </action>
        <action id="ArthasStackCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasStackCommandAction"
                text="Stack"
                description="Display the stack trace for the specified class and method">

        </action>
        <action id="ArthasTimeTunnelCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasTimeTunnelCommandAction"
                text="TimeTunnel Tt"
                description="Time tunnel">

        </action>
        <action id="ArthasSetStaticFieldCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasOgnlSetStaticFieldCommandAction"
                text="Set Static Field"
                description="Ognl set static field">

        </action>

        <action id="ArthasOgnlSpringSelectedPropertySourceCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasOgnlSpringSelectedPropertySourceCommandAction"
                text="Get Selected Spring Property"
                description="Ognl get selected spring property">

        </action>
        <action id="ArthasOgnlSpringAllPropertySourceCommand"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasOgnlSpringAllPropertySourceCommandAction"
                text="Get All Spring Property"
                description="Ognl get all spring property">

        </action>
        <action id="ArthasJadCommandAction"
                class="com.github.wangji92.arthas.plugin.action.arthas.ArthasJadCommandAction"
                text="Decompile Class Jad"
                description="Decompile class">

        </action>


        <group id="arthas-plugin" popup="true" text="Arthas Command">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="CopyReference"/>
            <add-to-group group-id="ToolsMenu" anchor="first"/>
            <separator/>
            <group id="arthas-plugin-ognl" popup="true" text="Ognl">
                <reference ref="ArthasStatic"/>
                <reference ref="ArthasSetStaticFieldCommand"/>
                <reference ref="ArthasInvokeBeanMethod"/>
                <reference ref="ArthasOgnlSpringSelectedPropertySourceCommand"/>
                <reference ref="ArthasOgnlSpringAllPropertySourceCommand"/>
            </group>
            <reference ref="ArthasWatch"/>
            <reference ref="ArthasTrace"/>
            <reference ref="ArthasStackCommand"/>
            <reference ref="ArthasMonitorCommand"/>
            <reference ref="ArthasTimeTunnelCommand"/>
            <group id="arthas-plugin-other" popup="true" text="Other">
                <reference ref="ArthasTraceMultipleCommand"/>
                <reference ref="ArthasSc"/>
                <reference ref="ArthasJadCommandAction"/>
                <reference ref="ArthasSpecial"/>
            </group>
            <separator/>
            <reference ref="ArthasInstallCommand"/>
            <separator/>
            <reference ref="ArthasHelpCommand"/>
        </group>
    </actions>

</idea-plugin>